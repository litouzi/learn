'''
汉诺塔问题
有n个大小不同的盘子按大小顺序排列在在柱子a(小在上大在下)，借助柱子b将这n个盘子移动到柱子c
每次只能移动一个盘子 小盘必须在大盘上

两个盘子的移动步骤:
1、把上面的一个盘子从a移动到b
2、把下面的一个盘子从a移动到c
3、把上面的一个盘子从b移动到c

递归:n个盘子的移动步骤:
1、把n-1个盘子经过从a经过c移动到b
2、把第n个盘子(最大的底盘)从a移动到c  (此步骤可一步完成)
3、把n-1个盘子从b经过a移动到c
'''
def hanoi(n, a, b, c):                       #n个盘子 abc三个柱子 从a经过b移动到c
    if n>0:                                  #递归终止条件是n=0 没有盘子需要移动 所有盘子都已经移动 当递归没有终止时 执行n个盘子移动的三步
       hanoi(n-1, a, c, b)                   #1、把n-1个盘子由a经过c移动到b
       print("mving from %s to %s"% (a, c))  #2、把剩下一个最大的盘子由a移动到c
       hanoi(n-1, b, a, c)                   #3、把n-1个盘子由b经过a移动到c
#每次移动该柱子最上面的盘子

hanoi(3,'A', 'B', 'C')  #有三个盘子 abc柱子名分别为ABC的汉诺塔问题

